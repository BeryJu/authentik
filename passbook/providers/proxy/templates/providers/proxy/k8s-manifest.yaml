apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: "passbook-gatekeeper-{{ provider.name }}"
    passbook.beryju.org/gatekeeper/provider: "{{ provider.pk }}"
  name: passbook-gatekeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: passbook-gatekeeper
      passbook.beryju.org/gatekeeper/provider: "{{ provider.pk }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: passbook-gatekeeper
        passbook.beryju.org/gatekeeper/provider: "{{ provider.pk }}"
    spec:
      containers:
      - args:
        - --upstream=file:///dev/null
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: "{{ provider.client.client_id }}"
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: "{{ provider.client.client_secret }}"
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: "{{ cookie_secret }}"
        - name: OAUTH2_PROXY_OIDC_ISSUER_URL
          value: "{{ issuer }}"
        - name: OAUTH2_PROXY_SET_XAUTHREQUEST
          value: "true"
        - name: OAUTH2_PROXY_SET_AUTHORIZATION_HEADER
          value: "true"
        image: beryju/passbook-gatekeeper:{{ version }}
        imagePullPolicy: Always
        name: passbook-gatekeeper
        ports:
        - containerPort: 4180
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: "passbook-gatekeeper-{{ provider.name }}"
    passbook.beryju.org/gatekeeper/provider: "{{ provider.pk }}"
  name: passbook-gatekeeper
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    app.kubernetes.io/name: passbook-gatekeeper
    passbook.beryju.org/gatekeeper/provider: "{{ provider.pk }}"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: passbook-gatekeeper-{{ provider.name }}
spec:
  rules:
  - host: {{ provider.external_host }}
    http:
      paths:
      - backend:
          serviceName: "passbook-gatekeeper-{{ provider.name }}"
          servicePort: 4180
        path: /oauth2
