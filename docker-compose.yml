---
version: '3.2'

services:
  postgresql:
    image: postgres:12
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - internal
    environment:
      - POSTGRES_PASSWORD=${PG_PASS:-thisisnotagoodpassword}
      - POSTGRES_USER=passbook
      - POSTGRES_DB=passbook
    env_file:
      - .env
  redis:
    image: redis
    networks:
      - internal
  server:
    image: beryju/passbook:${PASSBOOK_TAG:-0.12.11-stable}
    command: server
    environment:
      PASSBOOK_REDIS__HOST: redis
      PASSBOOK_POSTGRESQL__HOST: postgresql
      PASSBOOK_POSTGRESQL__PASSWORD: ${PG_PASS}
    volumes:
      - ./media:/media
    ports:
      - 8000
    networks:
      - internal
    labels:
      traefik.enable: 'true'
      traefik.docker.network: internal
      traefik.http.routers.app-router.rule: PathPrefix(`/`)
      traefik.http.routers.app-router.service: app-service
      traefik.http.routers.app-router.tls: 'true'
      traefik.http.services.app-service.loadbalancer.healthcheck.hostname: passbook-healthcheck-host
      traefik.http.services.app-service.loadbalancer.server.port: '8000'
    env_file:
      - .env
  worker:
    image: beryju/passbook:${PASSBOOK_TAG:-0.12.11-stable}
    command: worker
    networks:
      - internal
    environment:
      PASSBOOK_REDIS__HOST: redis
      PASSBOOK_POSTGRESQL__HOST: postgresql
      PASSBOOK_POSTGRESQL__PASSWORD: ${PG_PASS}
    volumes:
      - ./backups:/backups
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
  static:
    image: beryju/passbook-static:${PASSBOOK_TAG:-0.12.11-stable}
    networks:
      - internal
    labels:
      traefik.enable: 'true'
      traefik.docker.network: internal
      traefik.http.routers.static-router.rule: PathPrefix(`/static`, `/media`, `/robots.txt`, `/favicon.ico`)
      traefik.http.routers.static-router.tls: 'true'
      traefik.http.routers.static-router.service: static-service
      traefik.http.services.static-service.loadbalancer.healthcheck.path: /
      traefik.http.services.static-service.loadbalancer.server.port: '80'
    volumes:
      - ./media:/media
  traefik:
    image: traefik:2.3
    command:
      - "--log.format=json"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "127.0.0.1:8080:8080"
    networks:
      - internal

volumes:
  database:
    driver: local

networks:
  internal: {}
