// Code generated by go-swagger; DO NOT EDIT.

package providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/BeryJu/passbook/proxy/pkg/models"
)

// NewProvidersOauth2CreateParams creates a new ProvidersOauth2CreateParams object
// with the default values initialized.
func NewProvidersOauth2CreateParams() *ProvidersOauth2CreateParams {
	var ()
	return &ProvidersOauth2CreateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewProvidersOauth2CreateParamsWithTimeout creates a new ProvidersOauth2CreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewProvidersOauth2CreateParamsWithTimeout(timeout time.Duration) *ProvidersOauth2CreateParams {
	var ()
	return &ProvidersOauth2CreateParams{

		timeout: timeout,
	}
}

// NewProvidersOauth2CreateParamsWithContext creates a new ProvidersOauth2CreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewProvidersOauth2CreateParamsWithContext(ctx context.Context) *ProvidersOauth2CreateParams {
	var ()
	return &ProvidersOauth2CreateParams{

		Context: ctx,
	}
}

// NewProvidersOauth2CreateParamsWithHTTPClient creates a new ProvidersOauth2CreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewProvidersOauth2CreateParamsWithHTTPClient(client *http.Client) *ProvidersOauth2CreateParams {
	var ()
	return &ProvidersOauth2CreateParams{
		HTTPClient: client,
	}
}

/*ProvidersOauth2CreateParams contains all the parameters to send to the API endpoint
for the providers oauth2 create operation typically these are written to a http.Request
*/
type ProvidersOauth2CreateParams struct {

	/*Data*/
	Data *models.OAuth2Provider

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the providers oauth2 create params
func (o *ProvidersOauth2CreateParams) WithTimeout(timeout time.Duration) *ProvidersOauth2CreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the providers oauth2 create params
func (o *ProvidersOauth2CreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the providers oauth2 create params
func (o *ProvidersOauth2CreateParams) WithContext(ctx context.Context) *ProvidersOauth2CreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the providers oauth2 create params
func (o *ProvidersOauth2CreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the providers oauth2 create params
func (o *ProvidersOauth2CreateParams) WithHTTPClient(client *http.Client) *ProvidersOauth2CreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the providers oauth2 create params
func (o *ProvidersOauth2CreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the providers oauth2 create params
func (o *ProvidersOauth2CreateParams) WithData(data *models.OAuth2Provider) *ProvidersOauth2CreateParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the providers oauth2 create params
func (o *ProvidersOauth2CreateParams) SetData(data *models.OAuth2Provider) {
	o.Data = data
}

// WriteToRequest writes these params to a swagger request
func (o *ProvidersOauth2CreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Data != nil {
		if err := r.SetBodyParam(o.Data); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
