// Code generated by go-swagger; DO NOT EDIT.

package flows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewFlowsInstancesReadParams creates a new FlowsInstancesReadParams object
// with the default values initialized.
func NewFlowsInstancesReadParams() *FlowsInstancesReadParams {
	var ()
	return &FlowsInstancesReadParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewFlowsInstancesReadParamsWithTimeout creates a new FlowsInstancesReadParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewFlowsInstancesReadParamsWithTimeout(timeout time.Duration) *FlowsInstancesReadParams {
	var ()
	return &FlowsInstancesReadParams{

		timeout: timeout,
	}
}

// NewFlowsInstancesReadParamsWithContext creates a new FlowsInstancesReadParams object
// with the default values initialized, and the ability to set a context for a request
func NewFlowsInstancesReadParamsWithContext(ctx context.Context) *FlowsInstancesReadParams {
	var ()
	return &FlowsInstancesReadParams{

		Context: ctx,
	}
}

// NewFlowsInstancesReadParamsWithHTTPClient creates a new FlowsInstancesReadParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewFlowsInstancesReadParamsWithHTTPClient(client *http.Client) *FlowsInstancesReadParams {
	var ()
	return &FlowsInstancesReadParams{
		HTTPClient: client,
	}
}

/*FlowsInstancesReadParams contains all the parameters to send to the API endpoint
for the flows instances read operation typically these are written to a http.Request
*/
type FlowsInstancesReadParams struct {

	/*FlowUUID
	  A UUID string identifying this Flow.

	*/
	FlowUUID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the flows instances read params
func (o *FlowsInstancesReadParams) WithTimeout(timeout time.Duration) *FlowsInstancesReadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the flows instances read params
func (o *FlowsInstancesReadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the flows instances read params
func (o *FlowsInstancesReadParams) WithContext(ctx context.Context) *FlowsInstancesReadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the flows instances read params
func (o *FlowsInstancesReadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the flows instances read params
func (o *FlowsInstancesReadParams) WithHTTPClient(client *http.Client) *FlowsInstancesReadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the flows instances read params
func (o *FlowsInstancesReadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFlowUUID adds the flowUUID to the flows instances read params
func (o *FlowsInstancesReadParams) WithFlowUUID(flowUUID strfmt.UUID) *FlowsInstancesReadParams {
	o.SetFlowUUID(flowUUID)
	return o
}

// SetFlowUUID adds the flowUuid to the flows instances read params
func (o *FlowsInstancesReadParams) SetFlowUUID(flowUUID strfmt.UUID) {
	o.FlowUUID = flowUUID
}

// WriteToRequest writes these params to a swagger request
func (o *FlowsInstancesReadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param flow_uuid
	if err := r.SetPathParam("flow_uuid", o.FlowUUID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
