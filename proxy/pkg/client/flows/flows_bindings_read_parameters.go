// Code generated by go-swagger; DO NOT EDIT.

package flows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewFlowsBindingsReadParams creates a new FlowsBindingsReadParams object
// with the default values initialized.
func NewFlowsBindingsReadParams() *FlowsBindingsReadParams {
	var ()
	return &FlowsBindingsReadParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewFlowsBindingsReadParamsWithTimeout creates a new FlowsBindingsReadParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewFlowsBindingsReadParamsWithTimeout(timeout time.Duration) *FlowsBindingsReadParams {
	var ()
	return &FlowsBindingsReadParams{

		timeout: timeout,
	}
}

// NewFlowsBindingsReadParamsWithContext creates a new FlowsBindingsReadParams object
// with the default values initialized, and the ability to set a context for a request
func NewFlowsBindingsReadParamsWithContext(ctx context.Context) *FlowsBindingsReadParams {
	var ()
	return &FlowsBindingsReadParams{

		Context: ctx,
	}
}

// NewFlowsBindingsReadParamsWithHTTPClient creates a new FlowsBindingsReadParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewFlowsBindingsReadParamsWithHTTPClient(client *http.Client) *FlowsBindingsReadParams {
	var ()
	return &FlowsBindingsReadParams{
		HTTPClient: client,
	}
}

/*FlowsBindingsReadParams contains all the parameters to send to the API endpoint
for the flows bindings read operation typically these are written to a http.Request
*/
type FlowsBindingsReadParams struct {

	/*FsbUUID
	  A UUID string identifying this Flow Stage Binding.

	*/
	FsbUUID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the flows bindings read params
func (o *FlowsBindingsReadParams) WithTimeout(timeout time.Duration) *FlowsBindingsReadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the flows bindings read params
func (o *FlowsBindingsReadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the flows bindings read params
func (o *FlowsBindingsReadParams) WithContext(ctx context.Context) *FlowsBindingsReadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the flows bindings read params
func (o *FlowsBindingsReadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the flows bindings read params
func (o *FlowsBindingsReadParams) WithHTTPClient(client *http.Client) *FlowsBindingsReadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the flows bindings read params
func (o *FlowsBindingsReadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFsbUUID adds the fsbUUID to the flows bindings read params
func (o *FlowsBindingsReadParams) WithFsbUUID(fsbUUID strfmt.UUID) *FlowsBindingsReadParams {
	o.SetFsbUUID(fsbUUID)
	return o
}

// SetFsbUUID adds the fsbUuid to the flows bindings read params
func (o *FlowsBindingsReadParams) SetFsbUUID(fsbUUID strfmt.UUID) {
	o.FsbUUID = fsbUUID
}

// WriteToRequest writes these params to a swagger request
func (o *FlowsBindingsReadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param fsb_uuid
	if err := r.SetPathParam("fsb_uuid", o.FsbUUID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
