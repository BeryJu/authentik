// Code generated by go-swagger; DO NOT EDIT.

package flows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new flows API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for flows API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	FlowsBindingsCreate(params *FlowsBindingsCreateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsCreateCreated, error)

	FlowsBindingsDelete(params *FlowsBindingsDeleteParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsDeleteNoContent, error)

	FlowsBindingsList(params *FlowsBindingsListParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsListOK, error)

	FlowsBindingsPartialUpdate(params *FlowsBindingsPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsPartialUpdateOK, error)

	FlowsBindingsRead(params *FlowsBindingsReadParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsReadOK, error)

	FlowsBindingsUpdate(params *FlowsBindingsUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsUpdateOK, error)

	FlowsInstancesCreate(params *FlowsInstancesCreateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesCreateCreated, error)

	FlowsInstancesDelete(params *FlowsInstancesDeleteParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesDeleteNoContent, error)

	FlowsInstancesList(params *FlowsInstancesListParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesListOK, error)

	FlowsInstancesPartialUpdate(params *FlowsInstancesPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesPartialUpdateOK, error)

	FlowsInstancesRead(params *FlowsInstancesReadParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesReadOK, error)

	FlowsInstancesUpdate(params *FlowsInstancesUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  FlowsBindingsCreate FlowStageBinding Viewset
*/
func (a *Client) FlowsBindingsCreate(params *FlowsBindingsCreateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsBindingsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_bindings_create",
		Method:             "POST",
		PathPattern:        "/flows/bindings/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsBindingsCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsBindingsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_bindings_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsBindingsDelete FlowStageBinding Viewset
*/
func (a *Client) FlowsBindingsDelete(params *FlowsBindingsDeleteParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsBindingsDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_bindings_delete",
		Method:             "DELETE",
		PathPattern:        "/flows/bindings/{fsb_uuid}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsBindingsDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsBindingsDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_bindings_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsBindingsList FlowStageBinding Viewset
*/
func (a *Client) FlowsBindingsList(params *FlowsBindingsListParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsBindingsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_bindings_list",
		Method:             "GET",
		PathPattern:        "/flows/bindings/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsBindingsListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsBindingsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_bindings_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsBindingsPartialUpdate FlowStageBinding Viewset
*/
func (a *Client) FlowsBindingsPartialUpdate(params *FlowsBindingsPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsBindingsPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_bindings_partial_update",
		Method:             "PATCH",
		PathPattern:        "/flows/bindings/{fsb_uuid}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsBindingsPartialUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsBindingsPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_bindings_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsBindingsRead FlowStageBinding Viewset
*/
func (a *Client) FlowsBindingsRead(params *FlowsBindingsReadParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsBindingsReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_bindings_read",
		Method:             "GET",
		PathPattern:        "/flows/bindings/{fsb_uuid}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsBindingsReadReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsBindingsReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_bindings_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsBindingsUpdate FlowStageBinding Viewset
*/
func (a *Client) FlowsBindingsUpdate(params *FlowsBindingsUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsBindingsUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsBindingsUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_bindings_update",
		Method:             "PUT",
		PathPattern:        "/flows/bindings/{fsb_uuid}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsBindingsUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsBindingsUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_bindings_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsInstancesCreate Flow Viewset
*/
func (a *Client) FlowsInstancesCreate(params *FlowsInstancesCreateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsInstancesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_instances_create",
		Method:             "POST",
		PathPattern:        "/flows/instances/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsInstancesCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsInstancesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_instances_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsInstancesDelete Flow Viewset
*/
func (a *Client) FlowsInstancesDelete(params *FlowsInstancesDeleteParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsInstancesDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_instances_delete",
		Method:             "DELETE",
		PathPattern:        "/flows/instances/{flow_uuid}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsInstancesDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsInstancesDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_instances_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsInstancesList Flow Viewset
*/
func (a *Client) FlowsInstancesList(params *FlowsInstancesListParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsInstancesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_instances_list",
		Method:             "GET",
		PathPattern:        "/flows/instances/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsInstancesListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsInstancesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_instances_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsInstancesPartialUpdate Flow Viewset
*/
func (a *Client) FlowsInstancesPartialUpdate(params *FlowsInstancesPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsInstancesPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_instances_partial_update",
		Method:             "PATCH",
		PathPattern:        "/flows/instances/{flow_uuid}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsInstancesPartialUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsInstancesPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_instances_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsInstancesRead Flow Viewset
*/
func (a *Client) FlowsInstancesRead(params *FlowsInstancesReadParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsInstancesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_instances_read",
		Method:             "GET",
		PathPattern:        "/flows/instances/{flow_uuid}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsInstancesReadReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsInstancesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_instances_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FlowsInstancesUpdate Flow Viewset
*/
func (a *Client) FlowsInstancesUpdate(params *FlowsInstancesUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*FlowsInstancesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFlowsInstancesUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "flows_instances_update",
		Method:             "PUT",
		PathPattern:        "/flows/instances/{flow_uuid}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &FlowsInstancesUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FlowsInstancesUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for flows_instances_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
