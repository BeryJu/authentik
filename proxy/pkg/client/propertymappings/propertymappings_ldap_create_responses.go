// Code generated by go-swagger; DO NOT EDIT.

package propertymappings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/BeryJu/passbook/proxy/pkg/models"
)

// PropertymappingsLdapCreateReader is a Reader for the PropertymappingsLdapCreate structure.
type PropertymappingsLdapCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PropertymappingsLdapCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPropertymappingsLdapCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPropertymappingsLdapCreateCreated creates a PropertymappingsLdapCreateCreated with default headers values
func NewPropertymappingsLdapCreateCreated() *PropertymappingsLdapCreateCreated {
	return &PropertymappingsLdapCreateCreated{}
}

/*PropertymappingsLdapCreateCreated handles this case with default header values.

PropertymappingsLdapCreateCreated propertymappings ldap create created
*/
type PropertymappingsLdapCreateCreated struct {
	Payload *models.LDAPPropertyMapping
}

func (o *PropertymappingsLdapCreateCreated) Error() string {
	return fmt.Sprintf("[POST /propertymappings/ldap/][%d] propertymappingsLdapCreateCreated  %+v", 201, o.Payload)
}

func (o *PropertymappingsLdapCreateCreated) GetPayload() *models.LDAPPropertyMapping {
	return o.Payload
}

func (o *PropertymappingsLdapCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LDAPPropertyMapping)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
