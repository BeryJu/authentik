// Code generated by go-swagger; DO NOT EDIT.

package propertymappings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/BeryJu/passbook/proxy/pkg/models"
)

// PropertymappingsSamlUpdateReader is a Reader for the PropertymappingsSamlUpdate structure.
type PropertymappingsSamlUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PropertymappingsSamlUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPropertymappingsSamlUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPropertymappingsSamlUpdateOK creates a PropertymappingsSamlUpdateOK with default headers values
func NewPropertymappingsSamlUpdateOK() *PropertymappingsSamlUpdateOK {
	return &PropertymappingsSamlUpdateOK{}
}

/*PropertymappingsSamlUpdateOK handles this case with default header values.

PropertymappingsSamlUpdateOK propertymappings saml update o k
*/
type PropertymappingsSamlUpdateOK struct {
	Payload *models.SAMLPropertyMapping
}

func (o *PropertymappingsSamlUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /propertymappings/saml/{pm_uuid}/][%d] propertymappingsSamlUpdateOK  %+v", 200, o.Payload)
}

func (o *PropertymappingsSamlUpdateOK) GetPayload() *models.SAMLPropertyMapping {
	return o.Payload
}

func (o *PropertymappingsSamlUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SAMLPropertyMapping)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
