// Code generated by go-swagger; DO NOT EDIT.

package sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/BeryJu/passbook/proxy/pkg/models"
)

// SourcesOauthPartialUpdateReader is a Reader for the SourcesOauthPartialUpdate structure.
type SourcesOauthPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SourcesOauthPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSourcesOauthPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSourcesOauthPartialUpdateOK creates a SourcesOauthPartialUpdateOK with default headers values
func NewSourcesOauthPartialUpdateOK() *SourcesOauthPartialUpdateOK {
	return &SourcesOauthPartialUpdateOK{}
}

/*SourcesOauthPartialUpdateOK handles this case with default header values.

SourcesOauthPartialUpdateOK sources oauth partial update o k
*/
type SourcesOauthPartialUpdateOK struct {
	Payload *models.OAuthSource
}

func (o *SourcesOauthPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /sources/oauth/{pbm_uuid}/][%d] sourcesOauthPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *SourcesOauthPartialUpdateOK) GetPayload() *models.OAuthSource {
	return o.Payload
}

func (o *SourcesOauthPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
