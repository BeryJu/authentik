// Code generated by go-swagger; DO NOT EDIT.

package stages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/BeryJu/passbook/proxy/pkg/models"
)

// NewStagesUserLoginUpdateParams creates a new StagesUserLoginUpdateParams object
// with the default values initialized.
func NewStagesUserLoginUpdateParams() *StagesUserLoginUpdateParams {
	var ()
	return &StagesUserLoginUpdateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStagesUserLoginUpdateParamsWithTimeout creates a new StagesUserLoginUpdateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStagesUserLoginUpdateParamsWithTimeout(timeout time.Duration) *StagesUserLoginUpdateParams {
	var ()
	return &StagesUserLoginUpdateParams{

		timeout: timeout,
	}
}

// NewStagesUserLoginUpdateParamsWithContext creates a new StagesUserLoginUpdateParams object
// with the default values initialized, and the ability to set a context for a request
func NewStagesUserLoginUpdateParamsWithContext(ctx context.Context) *StagesUserLoginUpdateParams {
	var ()
	return &StagesUserLoginUpdateParams{

		Context: ctx,
	}
}

// NewStagesUserLoginUpdateParamsWithHTTPClient creates a new StagesUserLoginUpdateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStagesUserLoginUpdateParamsWithHTTPClient(client *http.Client) *StagesUserLoginUpdateParams {
	var ()
	return &StagesUserLoginUpdateParams{
		HTTPClient: client,
	}
}

/*StagesUserLoginUpdateParams contains all the parameters to send to the API endpoint
for the stages user login update operation typically these are written to a http.Request
*/
type StagesUserLoginUpdateParams struct {

	/*Data*/
	Data *models.UserLoginStage
	/*StageUUID
	  A UUID string identifying this User Login Stage.

	*/
	StageUUID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the stages user login update params
func (o *StagesUserLoginUpdateParams) WithTimeout(timeout time.Duration) *StagesUserLoginUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the stages user login update params
func (o *StagesUserLoginUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the stages user login update params
func (o *StagesUserLoginUpdateParams) WithContext(ctx context.Context) *StagesUserLoginUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the stages user login update params
func (o *StagesUserLoginUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the stages user login update params
func (o *StagesUserLoginUpdateParams) WithHTTPClient(client *http.Client) *StagesUserLoginUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the stages user login update params
func (o *StagesUserLoginUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the stages user login update params
func (o *StagesUserLoginUpdateParams) WithData(data *models.UserLoginStage) *StagesUserLoginUpdateParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the stages user login update params
func (o *StagesUserLoginUpdateParams) SetData(data *models.UserLoginStage) {
	o.Data = data
}

// WithStageUUID adds the stageUUID to the stages user login update params
func (o *StagesUserLoginUpdateParams) WithStageUUID(stageUUID strfmt.UUID) *StagesUserLoginUpdateParams {
	o.SetStageUUID(stageUUID)
	return o
}

// SetStageUUID adds the stageUuid to the stages user login update params
func (o *StagesUserLoginUpdateParams) SetStageUUID(stageUUID strfmt.UUID) {
	o.StageUUID = stageUUID
}

// WriteToRequest writes these params to a swagger request
func (o *StagesUserLoginUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Data != nil {
		if err := r.SetBodyParam(o.Data); err != nil {
			return err
		}
	}

	// path param stage_uuid
	if err := r.SetPathParam("stage_uuid", o.StageUUID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
