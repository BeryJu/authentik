// Code generated by go-swagger; DO NOT EDIT.

package stages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewStagesPromptPromptsDeleteParams creates a new StagesPromptPromptsDeleteParams object
// with the default values initialized.
func NewStagesPromptPromptsDeleteParams() *StagesPromptPromptsDeleteParams {
	var ()
	return &StagesPromptPromptsDeleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStagesPromptPromptsDeleteParamsWithTimeout creates a new StagesPromptPromptsDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStagesPromptPromptsDeleteParamsWithTimeout(timeout time.Duration) *StagesPromptPromptsDeleteParams {
	var ()
	return &StagesPromptPromptsDeleteParams{

		timeout: timeout,
	}
}

// NewStagesPromptPromptsDeleteParamsWithContext creates a new StagesPromptPromptsDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewStagesPromptPromptsDeleteParamsWithContext(ctx context.Context) *StagesPromptPromptsDeleteParams {
	var ()
	return &StagesPromptPromptsDeleteParams{

		Context: ctx,
	}
}

// NewStagesPromptPromptsDeleteParamsWithHTTPClient creates a new StagesPromptPromptsDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStagesPromptPromptsDeleteParamsWithHTTPClient(client *http.Client) *StagesPromptPromptsDeleteParams {
	var ()
	return &StagesPromptPromptsDeleteParams{
		HTTPClient: client,
	}
}

/*StagesPromptPromptsDeleteParams contains all the parameters to send to the API endpoint
for the stages prompt prompts delete operation typically these are written to a http.Request
*/
type StagesPromptPromptsDeleteParams struct {

	/*PromptUUID
	  A UUID string identifying this Prompt.

	*/
	PromptUUID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the stages prompt prompts delete params
func (o *StagesPromptPromptsDeleteParams) WithTimeout(timeout time.Duration) *StagesPromptPromptsDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the stages prompt prompts delete params
func (o *StagesPromptPromptsDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the stages prompt prompts delete params
func (o *StagesPromptPromptsDeleteParams) WithContext(ctx context.Context) *StagesPromptPromptsDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the stages prompt prompts delete params
func (o *StagesPromptPromptsDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the stages prompt prompts delete params
func (o *StagesPromptPromptsDeleteParams) WithHTTPClient(client *http.Client) *StagesPromptPromptsDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the stages prompt prompts delete params
func (o *StagesPromptPromptsDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPromptUUID adds the promptUUID to the stages prompt prompts delete params
func (o *StagesPromptPromptsDeleteParams) WithPromptUUID(promptUUID strfmt.UUID) *StagesPromptPromptsDeleteParams {
	o.SetPromptUUID(promptUUID)
	return o
}

// SetPromptUUID adds the promptUuid to the stages prompt prompts delete params
func (o *StagesPromptPromptsDeleteParams) SetPromptUUID(promptUUID strfmt.UUID) {
	o.PromptUUID = promptUUID
}

// WriteToRequest writes these params to a swagger request
func (o *StagesPromptPromptsDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param prompt_uuid
	if err := r.SetPathParam("prompt_uuid", o.PromptUUID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
