// Code generated by go-swagger; DO NOT EDIT.

package stages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewStagesInvitationInvitationsReadParams creates a new StagesInvitationInvitationsReadParams object
// with the default values initialized.
func NewStagesInvitationInvitationsReadParams() *StagesInvitationInvitationsReadParams {
	var ()
	return &StagesInvitationInvitationsReadParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStagesInvitationInvitationsReadParamsWithTimeout creates a new StagesInvitationInvitationsReadParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStagesInvitationInvitationsReadParamsWithTimeout(timeout time.Duration) *StagesInvitationInvitationsReadParams {
	var ()
	return &StagesInvitationInvitationsReadParams{

		timeout: timeout,
	}
}

// NewStagesInvitationInvitationsReadParamsWithContext creates a new StagesInvitationInvitationsReadParams object
// with the default values initialized, and the ability to set a context for a request
func NewStagesInvitationInvitationsReadParamsWithContext(ctx context.Context) *StagesInvitationInvitationsReadParams {
	var ()
	return &StagesInvitationInvitationsReadParams{

		Context: ctx,
	}
}

// NewStagesInvitationInvitationsReadParamsWithHTTPClient creates a new StagesInvitationInvitationsReadParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStagesInvitationInvitationsReadParamsWithHTTPClient(client *http.Client) *StagesInvitationInvitationsReadParams {
	var ()
	return &StagesInvitationInvitationsReadParams{
		HTTPClient: client,
	}
}

/*StagesInvitationInvitationsReadParams contains all the parameters to send to the API endpoint
for the stages invitation invitations read operation typically these are written to a http.Request
*/
type StagesInvitationInvitationsReadParams struct {

	/*InviteUUID
	  A UUID string identifying this Invitation.

	*/
	InviteUUID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the stages invitation invitations read params
func (o *StagesInvitationInvitationsReadParams) WithTimeout(timeout time.Duration) *StagesInvitationInvitationsReadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the stages invitation invitations read params
func (o *StagesInvitationInvitationsReadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the stages invitation invitations read params
func (o *StagesInvitationInvitationsReadParams) WithContext(ctx context.Context) *StagesInvitationInvitationsReadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the stages invitation invitations read params
func (o *StagesInvitationInvitationsReadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the stages invitation invitations read params
func (o *StagesInvitationInvitationsReadParams) WithHTTPClient(client *http.Client) *StagesInvitationInvitationsReadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the stages invitation invitations read params
func (o *StagesInvitationInvitationsReadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInviteUUID adds the inviteUUID to the stages invitation invitations read params
func (o *StagesInvitationInvitationsReadParams) WithInviteUUID(inviteUUID strfmt.UUID) *StagesInvitationInvitationsReadParams {
	o.SetInviteUUID(inviteUUID)
	return o
}

// SetInviteUUID adds the inviteUuid to the stages invitation invitations read params
func (o *StagesInvitationInvitationsReadParams) SetInviteUUID(inviteUUID strfmt.UUID) {
	o.InviteUUID = inviteUUID
}

// WriteToRequest writes these params to a swagger request
func (o *StagesInvitationInvitationsReadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param invite_uuid
	if err := r.SetPathParam("invite_uuid", o.InviteUUID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
