// Code generated by go-swagger; DO NOT EDIT.

package stages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/BeryJu/passbook/proxy/pkg/models"
)

// StagesInvitationInvitationsPartialUpdateReader is a Reader for the StagesInvitationInvitationsPartialUpdate structure.
type StagesInvitationInvitationsPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StagesInvitationInvitationsPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStagesInvitationInvitationsPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStagesInvitationInvitationsPartialUpdateOK creates a StagesInvitationInvitationsPartialUpdateOK with default headers values
func NewStagesInvitationInvitationsPartialUpdateOK() *StagesInvitationInvitationsPartialUpdateOK {
	return &StagesInvitationInvitationsPartialUpdateOK{}
}

/*StagesInvitationInvitationsPartialUpdateOK handles this case with default header values.

StagesInvitationInvitationsPartialUpdateOK stages invitation invitations partial update o k
*/
type StagesInvitationInvitationsPartialUpdateOK struct {
	Payload *models.Invitation
}

func (o *StagesInvitationInvitationsPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /stages/invitation/invitations/{invite_uuid}/][%d] stagesInvitationInvitationsPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *StagesInvitationInvitationsPartialUpdateOK) GetPayload() *models.Invitation {
	return o.Payload
}

func (o *StagesInvitationInvitationsPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Invitation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
