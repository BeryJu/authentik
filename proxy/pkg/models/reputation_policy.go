// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReputationPolicy reputation policy
//
// swagger:model ReputationPolicy
type ReputationPolicy struct {

	// Check ip
	CheckIP bool `json:"check_ip,omitempty"`

	// Check username
	CheckUsername bool `json:"check_username,omitempty"`

	// Name
	Name *string `json:"name,omitempty"`

	// Policy uuid
	// Read Only: true
	// Format: uuid
	Pk strfmt.UUID `json:"pk,omitempty"`

	// Threshold
	// Maximum: 2.147483647e+09
	// Minimum: -2.147483648e+09
	Threshold *int64 `json:"threshold,omitempty"`
}

// Validate validates this reputation policy
func (m *ReputationPolicy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePk(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateThreshold(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReputationPolicy) validatePk(formats strfmt.Registry) error {

	if swag.IsZero(m.Pk) { // not required
		return nil
	}

	if err := validate.FormatOf("pk", "body", "uuid", m.Pk.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ReputationPolicy) validateThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.Threshold) { // not required
		return nil
	}

	if err := validate.MinimumInt("threshold", "body", int64(*m.Threshold), -2.147483648e+09, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("threshold", "body", int64(*m.Threshold), 2.147483647e+09, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReputationPolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReputationPolicy) UnmarshalBinary(b []byte) error {
	var res ReputationPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
